import os
import numpy as np
import argparse

from sklearn.naive_bayes import BernoulliNB
from sklearn.feature_extraction.text import TfidfVectorizer
corpus = [
    'This is the first document.',
    'This document is the second document.',
    'And this is the third one.',
    'Is this the first document?',
]
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(corpus)
print(vectorizer.get_feature_names())

print ("X", X)
print(X.shape)

dataset_dir = "../drebin/feature_vectors"

# list that contains the list of all the files contained in dataset_dir
files_list =  os.listdir(dataset_dir)

D = {}
small_sample = files_list[:1000]

for file_i in small_sample:
    D[file_i] = []


X = np.random.randint(2, size=(6, 100))
print ("X ", X)
Y = np.array([1, 2, 3, 4, 4, 5])
print ("Y ", Y)


clf = BernoulliNB()
clf.fit(X, Y)

print(clf.predict(X[4:5]))


def uno(Args):
    ParseArgs()
    argint = Args.argInt
    argstring = Args.argString
    print("int: ", argint)
    print("string: ", argstring)


def ParseArgs():
    Args =  argparse.ArgumentParser(description="description: ci sono due args " )
    Args.add_argument("--argInt", type= int, default= 0,
                      help="the argument has to be an int ")

    Args.add_argument("--argString", default= "defaultString",
                      help= "an argument")
    return Args.parse_args()



if __name__ == "__main__":
    uno(ParseArgs())
